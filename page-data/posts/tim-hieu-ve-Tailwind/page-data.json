{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/tim-hieu-ve-Tailwind/","result":{"data":{"site":{"siteMetadata":{"title":"ThuyLe - Expresspedia Blog","subtitle":"I'm a full-stack web developer with experience in <code>#JavaScript</code>, <code>#Website Design</code>, <code>#Object-Oriented programming</code> and <code>more</code>.","copyright":"© All rights reserved.","author":{"name":"Hi, I am Thuy Le","twitter":"#"},"disqusShortname":"","url":"https://lumen.netlify.com"}},"markdownRemark":{"id":"d3a871f7-5b06-5ef3-8583-bf8a63b3c63e","html":"<p>Trong CSS, từ trước tới nay nếu chúng ta muốn dàn layout của trang thì sẽ sử dụng các thuộc tính <code class=\"language-text\">float</code> và kỹ thuật <code class=\"language-text\">clear float</code> để chia cột website như ý muốn. Hoặc muốn thuận tiện hơn thì sử dụng các CSS Grid Framework để tiết kiệm thời gian. Nhưng nói thật, nếu bạn đã từng làm việc với CSS thường xuyên thì việc chia cột đôi khi rất tốn thời gian với kỹ thuật truyền thống này, còn dùng framework thì lại khiến website chúng ta có thêm nhiều đoạn CSS không cần thiết. Hoặc là nếu chúng ta dàn trang trên kỹ thuật thông thường hiện nay thì ở mỗi thiết bị khác nhau mình phải cân đối lại kích thước khá phức tạp.</p>\n<p>CSS3 ra đời giống như phiên bản cải thiện những nhược điểm hiện có của nó, trong đó bao gồm luôn việc cải thiện kỹ thuật dàn trang linh hoạt hơn, đơn giản hơn và thuộc tính CSS3 chúng ta sử dụng để dàn trang là <code class=\"language-text\">Flexbox</code>.</p>\n<h2>Flexbox là gì?</h2>\n<p>Flexbox là một kiểu dàn trang (layout mode) mà nó sẽ tự cân đối kích thước của các phần tử bên trong để hiển thị trên mọi thiết bị. Nói theo cách khác, bạn không cần thiết lập kích thước của phần tử, không cần cho nó float, chỉ cần thiết lập nó hiển thị chiều ngang hay chiều dọc, lúc đó các phần tử bên trong có thể hiển thị theo ý muốn.</p>\n<p>Hiện nay, theo lời khuyên từ Mozilla thì chúng ta sử dụng Flexbox để thiết lập bố cục trong phạm vi nhỏ (ví dụ như những khung trong website) và khi thiết lập bố cục ở phạm vi lớn hơn (như chia cột website) thì vẫn nên sử dụng kiểu thông thường là dàn trang theo dạng lưới (grid layout)</p>\n<h2>Thuật ngữ các thành phần trong Flexbox</h2>\n<p>Trước khi đi vào tìm hiểu sâu hơn về Flexbox, chúng ta cần nắm qua cấu trúc của Flexbox là như thế nào và một số thuật ngữ liên quan.</p>\n<p>Dưới đây là sơ đồ cấu trúc Flexbox từ Mozilla Developer Network.\n<img src=\"https://i.imgur.com/TmC8lNs.jpg\" alt=\"alt text\" title=\"Ảnh 1\"></p>\n<p>Hai thành phần quan trọng nhất trong một bố cục Flexbox là gồm container và item:</p>\n<ul>\n<li><code class=\"language-text\">container</code>: là thành phần lớn bao quanh các phần tử bên trong, bạn sẽ thiết lập kiểu hiển thị inline (sắp xếp theo chiều ngang) hoặc kiểu sắp xếp theo chiều dọc. Khi đó, các item bên trong sẽ hiển thị dựa trên thiết lập của container này.</li>\n<li><code class=\"language-text\">item</code>: Các phần tử con của container được gọi là item, ở item bạn có thể thiết lập nó sẽ sử dụng bao nhiêu cột trong một container, hoặc thiết lập thứ tự hiển thị của nó.</li>\n</ul>\n<p>Ngoài hai thành phần chính đó, chúng ta có thể thấy hình trên sẽ có:</p>\n<ul>\n<li><code class=\"language-text\">main start</code>, <code class=\"language-text\">main end</code>: Khi thiết lập flexbox, điểm bắt đầu của container gọi là main start và điểm kết thúc được gọi là main end. Điều này có nghĩa, các item bên trong sẽ hiển thị từ main start đến main end (hoặc là được phép hiển thị đến main end). Và chiều vuông góc của nó là cross start, cross end cũng có ý nghĩa tương tự nhưng luôn vuông góc với main start, main end.</li>\n<li><code class=\"language-text\">main axis</code>: Trục này là trục chính để điều khiển hướng mà các item sẽ hiển thị. Như bạn thấy ở trên hình main axis là trục dọc nên các item sẽ hiển thị theo chiều dọc, tuy nhiên ta có thể sử dụng thuộc tính flex-direction để thay đổi trục của main axis và lúc đó các item sẽ hiển thị theo nó. Và cross axis luôn là trục vuông góc của main axis.</li>\n<li><code class=\"language-text\">main size</code>: Bạn có thể hiểu đơn giản là kích thước (chiều rộng hoặc dọc) của mỗi item dựa theo trục main axis.</li>\n<li><code class=\"language-text\">cross size</code>: Là kích thước (chiều rộng hoặc dọc) của mỗi item dựa theo trục cross axis.</li>\n</ul>\n<h2>Bắt đầu với Flexbox</h2>\n<p>Trước tiên mình bắt đầu với một cấu trúc đơn giản sau:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>item item1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>item item2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>item item3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>item item4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Và một đoạn CSS ban đầu để thiết lập màu sắc và kích thước để dễ nhìn từng thành phần:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/** Global CSS **/</span>\n<span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 960px<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">max-height</span><span class=\"token punctuation\">:</span> 1000px<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.item</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">background</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bây giờ chúng ta sẽ bắt đầu làm việc với Flexbox ở đây. Trước tiên chúng ta sẽ đưa <code class=\"language-text\">.container</code> về hiển thị ở dạng flexbox với <code class=\"language-text\">display: flex</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/** Flex layout **/</span>\n<span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bạn sẽ thấy các item bên trong đã tự hiển thị theo chiều dọc, tương ứng với trục main axis mặc định là chiều ngang.\n<img src=\"https://imgur.com/1xWKjxk.jpg\" alt=\"alt text\" title=\"Ảnh 2\"></p>\n<p>Nếu bạn muốn đổi trục thì chỉ cần thêm thuộc tính <code class=\"language-text\">flex-direction</code> vào <code class=\"language-text\">container</code>. Cụ thể:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> row | column | row-reverse | column-reverse</code></pre></div>\n<p>Trong đó:</p>\n<ul>\n<li><code class=\"language-text\">flex-direction</code>: Xác định hướng mà container muốn sắp xếp các item.</li>\n<li><code class=\"language-text\">row</code>: Mặc định, chuyển trục main axis thành chiều ngang, nghĩa là hiển thị theo hàng (theo chiều ngang).</li>\n<li><code class=\"language-text\">colum</code>: Chuyển trục main axis thành chiều dọc, nghĩa là hiển thị theo cột (theo chiều dọc).</li>\n<li><code class=\"language-text\">row-reverse</code>: Hiển thị theo hàng nhưng đảo ngược vị trí các item.</li>\n<li><code class=\"language-text\">column-reverse</code>: Hiển thị theo cột nhưng đảo ngược vị trí các item.\n<img src=\"https://imgur.com/qgk8WOj.jpg\" alt=\"alt text\" title=\"Ảnh 3\"></li>\n</ul>\n<p>Bây giờ, chúng ta thử thêm chiều rộng cho mỗi item bên trong là 1000px xem chuyện gì sẽ xảy ra khi dùng flexbox.\n<img src=\"https://imgur.com/OEbGWBC.jpg\" alt=\"alt text\" title=\"Ảnh 4\"></p>\n<p>Như bạn thấy, dù chúng ta có thêm chiều rộng cho mỗi item bên trong là <code class=\"language-text\">1000px</code> nhưng nó vẫn hiển thị trên một hàng đều nhau. Lý do là mặc định, flexbox tự căn chỉnh các phần tử hiển thị đều nhau theo trục main axis của nó dựa theo chiều rộng của container. Vì vậy cho dù bạn có chỉnh chiều rộng vượt quá giới hạn của nó thì nó vẫn không bị nhảy lung tung.</p>\n<p>Bây giờ hãy thử thêm thuộc tính <code class=\"language-text\">flex-wrap: wrap</code> vào <code class=\"language-text\">container</code> thử nhé.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n \t<span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://imgur.com/kPMWKGT.jpg\" alt=\"alt text\" title=\"Ảnh 4\"></p>\n<p>Nói nôm na là thuộc tính này cho phép container có thể bọc lại các item kể cả khi kích thước của item bị thay đổi, mặc định là <code class=\"language-text\">nowrap</code>. Thuộc tính này có thể áp dụng với cả chiều dọc của container và item.</p>\n<p>Trong đoạn HTML ví dụ ở trên, ta có đặt số thứ tự cho mỗi phần tử là 1, 2, 3 và 4 với class tương ứng là <code class=\"language-text\">.item1</code>, <code class=\"language-text\">.item2</code>, <code class=\"language-text\">.item3</code> và <code class=\"language-text\">.item4</code>. Mặc định item này sẽ hiển thị theo thứ tự trong HTML, nhưng với thuộc tính order chúng ta có thể sắp xếp lại vị trí sắp xếp của các item.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.item1</span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token property\">order</span><span class=\"token punctuation\">:</span> 4<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.item2</span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token property\">order</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.item3</span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token property\">order</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.item4</span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token property\">order</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://imgur.com/cpDAWTs.jpg\" alt=\"alt text\" title=\"Ảnh 5\">\nMặc định thứ tự sắp xếp sẽ bắt đầu từ bên trái qua phải, từ trên xuống dưới. Nếu bạn chỉnh lại trục của main axis với thuộc tính flex-direction nó sẽ thay đổi ngược lại.</p>\n<p>Tiếp theo, hãy thử bỏ chức năng <code class=\"language-text\">flex-wrap: wrap</code> đi và thiết lập chiều rộng của item là 50px.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.item</span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bây giờ ở <code class=\"language-text\">.item2</code>, mình cho giá trị <code class=\"language-text\">flex-grow</code> là <code class=\"language-text\">1</code> thử nhé.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.item2</span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token property\">flex-grow</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://imgur.com/eg0tSyc.jpg\" alt=\"alt text\" title=\"Ảnh 6\"></p>\n<p>Khi thiết lập nó <code class=\"language-text\">flex-grow</code> là <code class=\"language-text\">1</code>, thì nó sẽ lấy phần trống còn lại của container đắp vào. Bây giờ hãy thử cho <code class=\"language-text\">.item1</code> với <code class=\"language-text\">flex-grow: 2</code> thử.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.item1</span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token property\">flex-grow</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://imgur.com/X8NzaIF.jpg\" alt=\"alt text\" title=\"Ảnh 7\"></p>\n<p>Lúc này giá trị <code class=\"language-text\">flex-grow: 2</code> sẽ lấy phần dư lớn gấp đôi của <code class=\"language-text\">flex-grow: 1</code>.</p>\n<h4>Tiếp theo chúng ta sẽ tìm hiểu thuộc tính <code class=\"language-text\">flex-shrink</code>.</h4>\n<p>Bạn có thể hiểu mặc định tất cả các item đều có giá trị <code class=\"language-text\">flex-shrink</code> là 1. Điều này có nghĩa là khi chúng ta thu nhỏ trình duyệt lại, các phần tử đều co lại bằng nhau. Tuy nhiên giả sử mình muốn <code class=\"language-text\">.item3</code> nó co lại nhiều hơn so với các item khác thì mình sẽ tăng giá trị <code class=\"language-text\">flex-shrink</code> của nó lên.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.item3</span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token property\">flex-shrink</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://imgur.com/JfUsdW5.jpg\" alt=\"alt text\" title=\"Ảnh 8\"></p>\n<h4>Tiếp theo là thuộc tính <code class=\"language-text\">flex-basis</code></h4>\n<p>Cái này bạn có thể hiểu đơn giản nhất là gán cho item một kích thước nhất định. Bạn có thể sử dụng giá trị tuyệt đối hoặc tương đối (căn cứ theo kích thước của container).</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.item3</span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token property\">flex-basis</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://imgur.com/yA10mTF.jpg\" alt=\"alt text\" title=\"Ảnh 9\"></p>\n<h4>Tiếp theo là thuộc tính <code class=\"language-text\">justify-content</code></h4>\n<p>Mặc định các item bên trong sẽ rải đều bắt đầu từ <code class=\"language-text\">main start</code> đến <code class=\"language-text\">main end</code>, tuy nhiên nếu container vẫn còn khoảng trống thì có thể dùng thuộc tính <code class=\"language-text\">justify-content</code> để điều chỉnh lại vị trí bắt đầu của nó.\nThuộc tính này có 5 giá trị và bạn có thể xem tấm ảnh bên dưới để hiểu hơn về ý nghĩa các giá trị của <code class=\"language-text\">justify-content</code>.</p>\n<p><img src=\"https://imgur.com/ffufkm7.jpg\" alt=\"alt text\" title=\"Ảnh 10\"></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> flex-end<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://imgur.com/SFB4k0M.jpg\" alt=\"alt text\" title=\"Ảnh 11\"></p>\n<p>Trong bài này mình chỉ đề cập tới một số thuộc tính hay dùng trong Flexbox thôi, bạn có thể xem thêm danh sách thuộc tính Flexbox tại <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout\">đây</a>.</p>","fields":{"tagSlugs":["/tags/css/","/tags/tailwind/"],"slug":"/posts/tim-hieu-ve-Tailwind/"},"frontmatter":{"title":"Tìm hiểu về Tailwind CSS","tags":["CSS","Tailwind"],"date":"2020-02-22T20:08:00.000Z","description":"CSS3 ra mắt 2 giá trị mới cho thuộc tính `display` là flex và inline-flex, giúp sắp xếp, bố cục các block một cách dễ dàng, linh hoạt hơn trước. Boostrap 4 hoặc các CSS Framework ra đời gần đây đều sử dụng flex. Trong bài này chúng ta sẽ tìm hiểu kỹ về nó, trước khi bắt tay tìm hiểu một CSS Framework HOT trong thời gian gần đây - Tailwind CSS."}}},"pageContext":{"slug":"/posts/tim-hieu-ve-Tailwind/"}}}